
<h3 class="text-dark mb-4"><i class="fas fa-wifi" style="transform: rotateZ(90deg);"></i>&nbsp;Passive Infrared
    Sensor Settings</h3>
<div class="row">
    <div class="col-md-6">
        <div class="card shadow">
            <div class="card-header py-3">
                <div class="row">
                    <div class="col">
                        <h3 class="text-primary"><i class="fas fa-wifi"
                                style="transform: rotateZ(90deg);"></i>&nbsp;PIR Sensor #1 (Top)</h3>
                        <p class="text-primary m-0 font-weight-bold"></p>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col"><label class="col-form-label">GPIO Port:&nbsp;</label></div>
                    <div class="col"><input class="form-control d-xl-flex justify-content-xl-center align-items-xl-center"
                            type="text" name="PIR1PORT" value="GPIO20"></div>
                </div>
                <div class="row">
                    <div class="col"><label class="col-form-label">When triggered play:&nbsp;</label></div>
                    <div class="col">
                        <select class="form-control" name="ledeffect1">
                            <option>Select a led effect</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col"><label class="col-form-label">Input chart:&nbsp;</label></div>
                    <div class="col">
                        <canvas id="inputchart1"></canvas>
                        
                    </div>
                </div>
                <div class="row">
                    <div class="col col-md-8"></div>
                    <div class="col col-md-4">
                        <div class="form-group">
                            <button class="btn btn-primary btn-sm form-control" type="submit">Save Settings</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card shadow">
            <div class="card-header py-3">
                <div class="row">
                    <div class="col">
                        <h3 class="text-primary"><i class="fas fa-wifi"
                                style="transform: rotateZ(90deg);"></i>&nbsp;PIR Sensor #2 (Bottom)</h3>
                        <p class="text-primary m-0 font-weight-bold"></p>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col"><label class="col-form-label">GPIO Port:&nbsp;</label></div>
                    <div class="col"><input class="form-control d-xl-flex justify-content-xl-center align-items-xl-center"
                            type="text" name="PIR2PORT" value="GPIO21"></div>
                </div>
                
                <div class="row">
                    <div class="col"><label class="col-form-label">When triggered play:&nbsp;</label></div>
                    <div class="col">
                        <select name="ledeffect2" class="form-control">
                            <option>Select a led effect</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col"><label class="col-form-label">Input chart:&nbsp;</label></div>
                    <div class="col">
                        <canvas id="inputchart2"></canvas>
                    </div>
                </div>
                <div class="row">
                    <div class="col col-md-8"></div>
                    <div class="col col-md-4">
                        <div class="form-group">
                            <button class="btn btn-primary btn-sm form-control" type="submit">Save Settings</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
   
      
        var color = Chart.helpers.color;
        var config = {
            type: 'line',
            data: {
                datasets: [{
                    backgroundColor: '#3498db',
                    label: 'Sensor 1 value',
                    fill: true,
                    data: [{
                        x: new Date(),
                        y: 0
                    }]
                }]
            },
            options: {
                responsive: true,
                title: {
                    display: false
                },
                elements: {
                    line: {
                        tension: 0,
                        stepped: true,
                    },
                },
               
                scales: {
                    xAxes: [{
                        type: 'time',
                        display: true,
                        time: {
                            unit: 'second',
                            displayFormats: {
                                second: 'hh:mm:ss'
                            }
                        },
                        scaleLabel: {
                            display: false,
                            labelString: 'Date'
                        },
                        ticks: {
                            major: {
                                fontStyle: 'bold',
                                fontColor: '#FF0000'
                            }
                        }
                    }],
                    yAxes: [{ 
                        ticks: {
                            max: 1,
                            "beginAtZero": true,
                            "display": true,
                            "maxTicksLimit": 2
                        },
                        display: true,
                        scaleLabel: {
                            display: false,
                            labelString: 'value'
                        }
                    }]
                }
            }
        };

    var config2 = {
        type: 'line',
        data: {
            datasets: [{
                label: 'Sensor 2 value',
                backgroundColor: '#3498db',
                fill: true,
                data: [{
                    x: new Date(),
                    y: 0
                }]
            }]
        },
        options: {
            responsive: true,
            title: {
                display: false
            },
            elements: {
                line: {
                    tension: 0,
                    stepped: true,
                },
            },

            scales: {
                xAxes: [{
                    type: 'time',
                    display: true,
                    time: {
                        unit: 'second',
                        displayFormats: {
                            second: 'hh:mm:ss'
                        }
                    },
                    scaleLabel: {
                        display: false,
                        labelString: 'Date'
                    },
                    ticks: {
                        major: {
                            fontStyle: 'bold',
                            fontColor: '#FF0000'
                        }
                    }
                }],
                yAxes: [{
                    ticks: {
                        max: 1,
                        "beginAtZero": true,
                        "display": true,
                        "maxTicksLimit": 2
                    },
                    display: true,
                    scaleLabel: {
                        display: false,
                        labelString: 'value'
                    }
                }]
            }
        }
        
    };

        window.onload = function () {
            
            window.chart1 = new Chart(document.getElementById('inputchart1').getContext('2d'), config);
            window.chart2 = new Chart(document.getElementById('inputchart2').getContext('2d'), config2);
            setTimeout(getChartDataPoint, 1000);

            window.socket.onmessage = function (result) {
                var data = JSON.parse(result.data);
                switch (data.type) {
                    case 'sensor1':
                        config.data.datasets[0].data.push({
                            x: new Date(data.time),
                            y: data.value
                        });
                        if (config.data.datasets[0].data.length > 60) {
                            config.data.datasets[0].data = config.data.datasets[0].data.slice(1);
                        }
                        window.chart1.update();
                        break;
                    case 'sensor2':
                        config2.data.datasets[0].data.push({
                            x: new Date(data.time),
                            y: data.value
                        });
                        if (config2.data.datasets[0].data.length > 60) {
                            config2.data.datasets[0].data = config2.data.datasets[0].data.slice(1);
                        }
                        window.chart2.update();
                    break;
                }
            }
        
        };

        function getChartDataPoint() {
            window.socket.send('sensor1');
            window.socket.send('sensor2');   
            setTimeout(getChartDataPoint, 1000);
        }

</script>